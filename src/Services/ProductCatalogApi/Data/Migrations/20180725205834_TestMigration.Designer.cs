// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalogApi.Data;

namespace ProductCatalogApi.Data.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20180725205834_TestMigration")]
    partial class TestMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalog_brand_hilo", "'catalog_brand_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_hilo", "'catalog_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_type_hilo", "'catalog_type_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogBrand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("CatalogBrand");

                    b.HasData(
                        new { id = 1, Brand = "Addidas" },
                        new { id = 2, Brand = "Puma" },
                        new { id = 3, Brand = "Slazenger" }
                    );
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CatalogBrandId");

                    b.Property<int>("CatalogTypeId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PictureFileName");

                    b.Property<string>("PictureUrl");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("Catalog");

                    b.HasData(
                        new { Id = 1, CatalogBrandId = 3, CatalogTypeId = 2, Description = "Shoes for next century", Name = "World Star", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/1", Price = 199.5m },
                        new { Id = 2, CatalogBrandId = 2, CatalogTypeId = 1, Description = "will make you world champions", Name = "White Line", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/2", Price = 88.50m },
                        new { Id = 3, CatalogBrandId = 3, CatalogTypeId = 2, Description = "You have already won gold medal", Name = "Prism White Shoes", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/3", Price = 129m },
                        new { Id = 4, CatalogBrandId = 2, CatalogTypeId = 2, Description = "Olympic runner", Name = "Foundation Hitech", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/4", Price = 12m },
                        new { Id = 5, CatalogBrandId = 1, CatalogTypeId = 2, Description = "Roslyn Red Sheet", Name = "Roslyn White", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/5", Price = 188.5m },
                        new { Id = 6, CatalogBrandId = 2, CatalogTypeId = 2, Description = "Lala Land", Name = "Blue Star", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/6", Price = 112m },
                        new { Id = 7, CatalogBrandId = 1, CatalogTypeId = 1, Description = "Light as carbon", Name = "Deep Purple", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/8", Price = 238.5m },
                        new { Id = 8, CatalogBrandId = 2, CatalogTypeId = 1, Description = "High Jumper", Name = "Addidas<White> Running", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/9", Price = 129m },
                        new { Id = 9, CatalogBrandId = 3, CatalogTypeId = 2, Description = "Dunker", Name = "Elequent", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/10", Price = 12m },
                        new { Id = 10, CatalogBrandId = 2, CatalogTypeId = 1, Description = "All round", Name = "Inredeible", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/11", Price = 248.5m },
                        new { Id = 11, CatalogBrandId = 1, CatalogTypeId = 2, Description = "Pricesless", Name = "London Sky", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/12", Price = 412m },
                        new { Id = 12, CatalogBrandId = 3, CatalogTypeId = 3, Description = "Tennis Star", Name = "Elequent", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/13", Price = 123m },
                        new { Id = 13, CatalogBrandId = 2, CatalogTypeId = 3, Description = "Wimbeldon", Name = "London Star", PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/14", Price = 218.5m }
                    );
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_type_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("CatalogType");

                    b.HasData(
                        new { id = 1, Type = "Running" },
                        new { id = 2, Type = "Basketball" },
                        new { id = 3, Type = "Tennis" }
                    );
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogItem", b =>
                {
                    b.HasOne("ProductCatalogApi.Domain.CatalogBrand", "CatalogBrand")
                        .WithMany()
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductCatalogApi.Domain.CatalogType", "CatalogType")
                        .WithMany()
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
